{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport axios from \"axios\";\nimport { TextInput, Avatar, Button, IconButton } from \"react-native-paper\";\nimport { list_style } from \"../assets/css/list_styles\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar url = \"http://localhost:3000/api\";\nexport default function carList() {\n  var navigation = useNavigation();\n  var _useForm = useForm({\n      defaultValues: {\n        platenumber: \"\",\n        brand: \"\",\n        dailyvalue: \"\",\n        status: \"\"\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    reset = _useForm.reset,\n    setValue = _useForm.setValue,\n    errors = _useForm.formState.errors;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataCars = _useState2[0],\n    setDataCars = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isError = _useState6[0],\n    setIsError = _useState6[1];\n  var List = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(`${url}/cars/list`);\n        data = response.data;\n        console.log();\n      } catch (_unused) {\n        console.log(\"pene\");\n      }\n    });\n    return function List() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    List();\n  }, []);\n  return _jsx(View, {\n    style: list_style.container,\n    children: _jsxs(View, {\n      style: list_style.button_container,\n      children: [_jsx(Button, {\n        style: list_style.button,\n        textColor: \"#ffffff\",\n        onPress: function onPress() {\n          return navigation.navigate('rentCar');\n        },\n        children: \"Volver\"\n      }), _jsx(ScrollView, {\n        contentContainerStyle: list_style.scrollview_container\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useState","useEffect","useForm","Controller","StyleSheet","Text","View","FlatList","TouchableOpacity","Pressable","ScrollView","axios","TextInput","Avatar","Button","IconButton","list_style","useNavigation","jsx","_jsx","jsxs","_jsxs","url","carList","navigation","_useForm","defaultValues","platenumber","brand","dailyvalue","status","control","handleSubmit","reset","setValue","errors","formState","_useState","_useState2","_slicedToArray","dataCars","setDataCars","_useState3","_useState4","message","setMessage","_useState5","_useState6","isError","setIsError","List","_ref","_asyncToGenerator","response","get","data","console","log","_unused","apply","arguments","style","container","children","button_container","button","textColor","onPress","navigate","contentContainerStyle","scrollview_container"],"sources":["C:/Users/Felipe/Documents/GitHub/PROEYECTO-FINAL/frontend/components/carList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    FlatList,\r\n    TouchableOpacity,\r\n    Pressable,\r\n    ScrollView \r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { TextInput, Avatar, Button, IconButton } from \"react-native-paper\";\r\nimport {list_style} from  \"../assets/css/list_styles\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst url = \"http://localhost:3000/api\";\r\n\r\nexport default function carList(){\r\n    const navigation = useNavigation(); \r\n\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        reset,\r\n        setValue,\r\n        formState: { errors },\r\n      } = useForm({\r\n        defaultValues: {\r\n          platenumber: \"\",\r\n          brand: \"\",\r\n          dailyvalue:\"\",\r\n          status:\"\",\r\n          \r\n        },\r\n      });\r\n\r\n      const [dataCars, setDataCars] = useState([]);\r\n      const [message, setMessage] = useState(\"\");\r\n      const [isError, setIsError] = useState(false);\r\n\r\n\r\n      const List = async () => {\r\n        try{\r\n            const response = await axios.get(`${url}/cars/list`)\r\n            data = response.data\r\n            console.log()\r\n            \r\n        }\r\n        catch{\r\n            console.log(\"pene\")\r\n        }\r\n      };\r\n\r\n      useEffect(()=>{\r\n        List()\r\n      },[])\r\n      \r\n      return(\r\n        <View style={list_style.container}>\r\n                <View style={list_style.button_container}> \r\n        \r\n              \r\n\r\n                    <Button\r\n                        style={list_style.button}\r\n                        textColor=\"#ffffff\"\r\n                        onPress={() => navigation.navigate('rentCar')}\r\n                    >\r\n                        Volver\r\n                    </Button>\r\n\r\n\r\n                    <ScrollView contentContainerStyle={list_style.scrollview_container}>\r\n\r\n\r\n\r\n                    </ScrollView>\r\n\r\n                </View>\r\n\r\n\r\n        </View>\r\n\r\n\r\n      )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAUtD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,UAAU,QAAQ,oBAAoB;AAC1E,SAAQC,UAAU;AAClB,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,GAAG,GAAG,2BAA2B;AAEvC,eAAe,SAASC,OAAOA,CAAA,EAAE;EAC7B,IAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAGlC,IAAAQ,QAAA,GAMMvB,OAAO,CAAC;MACVwB,aAAa,EAAE;QACbC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAC,EAAE;QACbC,MAAM,EAAC;MAET;IACF,CAAC,CAAC;IAbAC,OAAO,GAAAN,QAAA,CAAPM,OAAO;IACPC,YAAY,GAAAP,QAAA,CAAZO,YAAY;IACZC,KAAK,GAAAR,QAAA,CAALQ,KAAK;IACLC,QAAQ,GAAAT,QAAA,CAARS,QAAQ;IACKC,MAAM,GAAAV,QAAA,CAAnBW,SAAS,CAAID,MAAM;EAWrB,IAAAE,SAAA,GAAgCrC,QAAQ,CAAC,EAAE,CAAC;IAAAsC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA8B1C,QAAQ,CAAC,EAAE,CAAC;IAAA2C,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA8B9C,QAAQ,CAAC,KAAK,CAAC;IAAA+C,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAG1B,IAAMG,IAAI;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACvB,IAAG;QACC,IAAMC,QAAQ,SAAS1C,KAAK,CAAC2C,GAAG,CAAE,GAAEhC,GAAI,YAAW,CAAC;QACpDiC,IAAI,GAAGF,QAAQ,CAACE,IAAI;QACpBC,OAAO,CAACC,GAAG,CAAC,CAAC;MAEjB,CAAC,CACD,OAAAC,OAAA,EAAK;QACDF,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACvB;IACF,CAAC;IAAA,gBAVKP,IAAIA,CAAA;MAAA,OAAAC,IAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUT;EAED3D,SAAS,CAAC,YAAI;IACZiD,IAAI,CAAC,CAAC;EACR,CAAC,EAAC,EAAE,CAAC;EAEL,OACE/B,IAAA,CAACb,IAAI;IAACuD,KAAK,EAAE7C,UAAU,CAAC8C,SAAU;IAAAC,QAAA,EAC1B1C,KAAA,CAACf,IAAI;MAACuD,KAAK,EAAE7C,UAAU,CAACgD,gBAAiB;MAAAD,QAAA,GAIrC5C,IAAA,CAACL,MAAM;QACH+C,KAAK,EAAE7C,UAAU,CAACiD,MAAO;QACzBC,SAAS,EAAC,SAAS;QACnBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM3C,UAAU,CAAC4C,QAAQ,CAAC,SAAS,CAAC;QAAA,CAAC;QAAAL,QAAA,EACjD;MAED,CAAQ,CAAC,EAGT5C,IAAA,CAACT,UAAU;QAAC2D,qBAAqB,EAAErD,UAAU,CAACsD;MAAqB,CAIvD,CAAC;IAAA,CAEX;EAAC,CAGT,CAAC;AAIf"},"metadata":{},"sourceType":"module","externalDependencies":[]}