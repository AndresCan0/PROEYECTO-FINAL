{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport axios from \"axios\";\nimport { TextInput, Avatar, Button, IconButton } from \"react-native-paper\";\nimport { LoginStyles } from \"../assets/css/login_Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar url = \"http://172.16.60.103:3000/api/login\";\nexport default function Login(_ref) {\n  var _errors$username, _errors$password;\n  var navigation = _ref.navigation;\n  var _useForm = useForm({\n      defaultValues: {\n        username: \"\",\n        password: \"\",\n        role: \"\"\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    reset = _useForm.reset,\n    setValue = _useForm.setValue,\n    errors = _useForm.formState.errors;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataUsers = _useState2[0],\n    setDataUsers = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    id = _useState4[0],\n    setId = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isError = _useState8[0],\n    setIsError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showPassword = _useState10[0],\n    setShowPassword = _useState10[1];\n  var getUsers = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(url);\n        console.log(response);\n        if (!response.data.error) {\n          setDataUsers(response.data);\n        } else {\n          console.log(\"No hay usuarios para mostrar\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function getUsers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var signIn = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var loggedUser = yield axios.post(`${url}`, {\n          username: username,\n          password: password\n        });\n        if (loggedUser.data.rol === \"usuario\") {\n          navigation.navigate('rentcar');\n        } else if (loggedUser.data.rol === \"admin\") {\n          navigation.navigate('adminScreen');\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          console.error('Error 400: Nombre de usuario y/o contraseña incorrectos');\n        } else {\n          console.error('Error durante el inicio de sesión:', error.message);\n        }\n      }\n    });\n    return function signIn() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: LoginStyles.container,\n    children: _jsxs(View, {\n      style: LoginStyles.login_container,\n      children: [_jsx(Text, {\n        style: LoginStyles.title,\n        children: \"Login \"\n      }), _jsxs(View, {\n        style: LoginStyles.input_container,\n        children: [_jsx(Controller, {\n          control: control,\n          rules: {\n            required: true\n          },\n          render: function render(_ref4) {\n            var _ref4$field = _ref4.field,\n              onChange = _ref4$field.onChange,\n              onBlur = _ref4$field.onBlur,\n              value = _ref4$field.value;\n            return _jsx(TextInput, {\n              label: \"Username\",\n              style: LoginStyles.input,\n              onChangeText: onChange,\n              value: value,\n              onBlur: onBlur\n            });\n          },\n          name: \"username\"\n        }), ((_errors$username = errors.username) == null ? void 0 : _errors$username.type) == \"required\" && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: \"Usuario es obligatorio\"\n        }), _jsx(Controller, {\n          control: control,\n          render: function render(_ref5) {\n            var _ref5$field = _ref5.field,\n              onChange = _ref5$field.onChange,\n              onBlur = _ref5$field.onBlur,\n              value = _ref5$field.value;\n            return _jsx(TextInput, {\n              label: \"Password\",\n              style: [LoginStyles.input],\n              onChangeText: onChange,\n              value: value,\n              onBlur: onBlur,\n              secureTextEntry: !showPassword,\n              icon: showPassword ? 'car-door' : 'car-door-lock',\n              onPress: function onPress() {\n                return setShowPassword(!showPassword);\n              }\n            });\n          },\n          name: \"password\"\n        }), ((_errors$password = errors.password) == null ? void 0 : _errors$password.type) == \"required\" && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: \"Contrase\\xF1a es obligatoria\"\n        }), _jsxs(View, {\n          style: LoginStyles.button_container,\n          children: [_jsx(Button, {\n            style: LoginStyles.button,\n            textColor: \"black\",\n            onPress: handleSubmit(signIn),\n            children: \"Inciar Sesion\"\n          }), _jsx(Button, {\n            style: LoginStyles.button,\n            textColor: \"black\",\n            onPress: function onPress() {\n              return navigation.navigate('ForgotPass');\n            },\n            children: \"\\xBFOlvido su constrase\\xF1a?\"\n          })]\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useState","useEffect","useForm","Controller","StyleSheet","Text","View","FlatList","TouchableOpacity","Pressable","Picker","axios","TextInput","Avatar","Button","IconButton","LoginStyles","jsx","_jsx","jsxs","_jsxs","url","Login","_ref","_errors$username","_errors$password","navigation","_useForm","defaultValues","username","password","role","control","handleSubmit","reset","setValue","errors","formState","_useState","_useState2","_slicedToArray","dataUsers","setDataUsers","_useState3","_useState4","id","setId","_useState5","_useState6","message","setMessage","_useState7","_useState8","isError","setIsError","_useState9","_useState10","showPassword","setShowPassword","getUsers","_ref2","_asyncToGenerator","response","get","console","log","data","error","apply","arguments","signIn","_ref3","loggedUser","post","rol","navigate","status","style","container","children","login_container","title","input_container","rules","required","render","_ref4","_ref4$field","field","onChange","onBlur","value","label","input","onChangeText","name","type","color","_ref5","_ref5$field","secureTextEntry","icon","onPress","button_container","button","textColor"],"sources":["C:/Users/Felipe/Desktop/code/DespenoyProducto3-Moviles3yProgAvan/desempenoyProducto/components/Login.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    FlatList,\r\n    TouchableOpacity,\r\n    Pressable,\r\n    Picker \r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { TextInput, Avatar, Button, IconButton } from \"react-native-paper\";\r\nimport {LoginStyles} from  \"../assets/css/login_Styles\";\r\n\r\nconst url = \"http://172.16.60.103:3000/api/login\"\r\n\r\nexport default function Login({navigation}) {\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        reset,\r\n        setValue,\r\n        formState: { errors },\r\n      } = useForm({\r\n        defaultValues: {\r\n            username: \"\",\r\n            password: \"\",\r\n            role:\"\"\r\n\r\n        },\r\n    });\r\n    const [dataUsers, setDataUsers] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [isError, setIsError] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n          const response = await axios.get(url);\r\n          console.log(response);\r\n          if (!response.data.error) {\r\n            setDataUsers(response.data);\r\n          }\r\n          else {\r\n            console.log(\"No hay usuarios para mostrar\");\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n\r\n      const signIn = async () => {\r\n        try {\r\n          const loggedUser = await axios.post(`${url}`, {username, password});\r\n          \r\n          if (loggedUser.data.rol === \"usuario\") {\r\n            navigation.navigate('rentcar');\r\n          } else if (loggedUser.data.rol === \"admin\") {\r\n            navigation.navigate('adminScreen'); \r\n          }\r\n        } catch (error) {\r\n          if (error.response && error.response.status === 400) {\r\n            \r\n            console.error('Error 400: Nombre de usuario y/o contraseña incorrectos');\r\n          \r\n          } else {\r\n           \r\n            console.error('Error durante el inicio de sesión:', error.message);\r\n\r\n          }\r\n        }\r\n      };\r\n\r\n      return(\r\n\r\n        <View style={LoginStyles.container}>\r\n\r\n            <View style={LoginStyles.login_container}>\r\n                <Text style={LoginStyles.title}>Login </Text>\r\n\r\n                <View style={LoginStyles.input_container}>\r\n                        <Controller\r\n                        control={control}\r\n                        rules={{\r\n                        required: true,\r\n                        }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                        <TextInput\r\n                        label=\"Username\"\r\n                        style={LoginStyles.input}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                        onBlur={onBlur}\r\n                        \r\n                        />\r\n                    )}\r\n                    name=\"username\"\r\n                    />\r\n                    {errors.username?.type == \"required\" && (\r\n                    <Text style={{ color: \"red\" }}>Usuario es obligatorio</Text>\r\n                    )}\r\n\r\n                        <Controller\r\n                             control={control}\r\n\r\n                                    render={({ field: { onChange, onBlur, value } }) => (\r\n                                    \r\n\r\n                                    <TextInput\r\n                                    label=\"Password\" \r\n                                    style={[LoginStyles.input]}\r\n                                    onChangeText={onChange}\r\n                                    value={value}\r\n                                    onBlur={onBlur}\r\n                                    secureTextEntry={!showPassword}\r\n                                    icon={showPassword ? 'car-door' : 'car-door-lock'}\r\n                                    onPress={() => setShowPassword(!showPassword)}\r\n                                    />  \r\n                                    )}\r\n                                    name=\"password\"\r\n                         />\r\n                    {errors.password?.type == \"required\" && (\r\n                         <Text style={{ color: \"red\" }}>Contraseña es obligatoria</Text>\r\n                    )}\r\n\r\n\r\n            <View style={LoginStyles.button_container}>\r\n                <Button\r\n                style={LoginStyles.button}\r\n                textColor=\"black\"\r\n                onPress={handleSubmit(signIn)}\r\n                >\r\n                    Inciar Sesion\r\n                </Button>\r\n                \r\n                <Button\r\n                    style={LoginStyles.button}\r\n                    textColor=\"black\"\r\n                    onPress={() => navigation.navigate('ForgotPass')} \r\n                    >\r\n                    ¿Olvido su constraseña?\r\n                </Button>\r\n\r\n            </View>\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n\r\n\r\n\r\n      )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}