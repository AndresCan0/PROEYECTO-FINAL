{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport axios from \"axios\";\nimport { TextInput, Avatar, Button, IconButton } from \"react-native-paper\";\nimport { LoginStyles } from \"../assets/css/login_Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar url = \"http://192.168.10.9:4000/api\";\nexport default function ForgotPass(_ref) {\n  var _errors$username, _errors$reservedword, _errors$newPassword;\n  var navigation = _ref.navigation;\n  var _useForm = useForm({\n      defaultValues: {\n        username: \"\",\n        reservedword: \"\",\n        newPassword: \"\"\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    reset = _useForm.reset,\n    setValue = _useForm.setValue,\n    errors = _useForm.formState.errors;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isError = _useState4[0],\n    setIsError = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPassword = _useState6[0],\n    setShowPassword = _useState6[1];\n  var forgotPassword = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      try {\n        var response = yield axios.post(`${url}/forgotpassword`, data);\n        if (!response.data.error) {\n          setMessage(\"Contraseña actualizada correctamente...\");\n          setIsError(false);\n        } else {\n          setMessage(response.data.message);\n          setIsError(true);\n        }\n      } catch (error) {\n        console.error(error);\n        setMessage(\"Hubo un error al procesar la solicitud\");\n        setIsError(true);\n      }\n    });\n    return function forgotPassword(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: LoginStyles.container,\n    children: _jsxs(View, {\n      style: LoginStyles.login_container,\n      children: [_jsx(Text, {\n        style: LoginStyles.title,\n        children: \"Reiniciar Contrase\\xF1a \"\n      }), _jsxs(View, {\n        style: LoginStyles.input_container,\n        children: [_jsx(Controller, {\n          control: control,\n          rules: {\n            required: true\n          },\n          render: function render(_ref3) {\n            var _ref3$field = _ref3.field,\n              onChange = _ref3$field.onChange,\n              onBlur = _ref3$field.onBlur,\n              value = _ref3$field.value;\n            return _jsx(TextInput, {\n              label: \"Username\",\n              style: LoginStyles.input,\n              onChangeText: onChange,\n              value: value,\n              onBlur: onBlur\n            });\n          },\n          name: \"username\"\n        }), ((_errors$username = errors.username) == null ? void 0 : _errors$username.type) == \"required\" && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: \"Usuario es obligatorio\"\n        }), _jsx(Controller, {\n          control: control,\n          render: function render(_ref4) {\n            var _ref4$field = _ref4.field,\n              onChange = _ref4$field.onChange,\n              onBlur = _ref4$field.onBlur,\n              value = _ref4$field.value;\n            return _jsx(TextInput, {\n              label: \"Palabra reservada\",\n              style: [LoginStyles.input],\n              onChangeText: onChange,\n              value: value,\n              onBlur: onBlur\n            });\n          },\n          name: \"reservedword\"\n        }), ((_errors$reservedword = errors.reservedword) == null ? void 0 : _errors$reservedword.type) == \"required\" && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: \"Ingrese su palabra reservada\"\n        }), _jsx(Controller, {\n          control: control,\n          render: function render(_ref5) {\n            var _ref5$field = _ref5.field,\n              onChange = _ref5$field.onChange,\n              onBlur = _ref5$field.onBlur,\n              value = _ref5$field.value;\n            return _jsx(TextInput, {\n              label: \"Nueva Contrase\\xF1a\",\n              style: [LoginStyles.input],\n              onChangeText: onChange,\n              value: value,\n              onBlur: onBlur,\n              secureTextEntry: !showPassword,\n              icon: showPassword ? 'car-door' : 'car-door-lock',\n              onPress: function onPress() {\n                return setShowPassword(!showPassword);\n              }\n            });\n          },\n          name: \"newPassword\"\n        }), ((_errors$newPassword = errors.newPassword) == null ? void 0 : _errors$newPassword.type) == \"required\" && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: \"Contrase\\xF1a es obligatorio\"\n        }), _jsxs(View, {\n          style: LoginStyles.button_container,\n          children: [_jsx(Button, {\n            style: LoginStyles.button,\n            textColor: \"black\",\n            onPress: handleSubmit(forgotPassword),\n            children: \"Actualizar Contrase\\xF1a\"\n          }), _jsx(Button, {\n            style: LoginStyles.button,\n            textColor: \"black\",\n            onPress: function onPress() {\n              return navigation.navigate('Login');\n            },\n            children: \"Volver\"\n          })]\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useState","useEffect","useForm","Controller","StyleSheet","Text","View","FlatList","TouchableOpacity","Pressable","Picker","axios","TextInput","Avatar","Button","IconButton","LoginStyles","jsx","_jsx","jsxs","_jsxs","url","ForgotPass","_ref","_errors$username","_errors$reservedword","_errors$newPassword","navigation","_useForm","defaultValues","username","reservedword","newPassword","control","handleSubmit","reset","setValue","errors","formState","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","isError","setIsError","_useState5","_useState6","showPassword","setShowPassword","forgotPassword","_ref2","_asyncToGenerator","data","response","post","error","console","_x","apply","arguments","style","container","children","login_container","title","input_container","rules","required","render","_ref3","_ref3$field","field","onChange","onBlur","value","label","input","onChangeText","name","type","color","_ref4","_ref4$field","_ref5","_ref5$field","secureTextEntry","icon","onPress","button_container","button","textColor","navigate"],"sources":["C:/Users/Felipe/Documents/GitHub/PROEYECTO-FINAL/frontend/components/ForgotPass.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    FlatList,\r\n    TouchableOpacity,\r\n    Pressable,\r\n    Picker \r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { TextInput, Avatar, Button, IconButton } from \"react-native-paper\";\r\nimport {LoginStyles} from  \"../assets/css/login_Styles\";\r\n\r\n\r\nconst url = \"http://192.168.10.9:4000/api\"\r\n\r\n\r\nexport default function ForgotPass({navigation}) {\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        reset,\r\n        setValue,\r\n        formState: { errors },\r\n      } = useForm({\r\n        defaultValues: {\r\n          username: \"\",\r\n          reservedword: \"\",\r\n          newPassword:\"\"\r\n        },\r\n      });\r\n    const [message, setMessage] = useState(\"\");\r\n    const [isError, setIsError] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n    const forgotPassword = async (data) => {\r\n      try {\r\n        const response = await axios.post(`${url}/forgotpassword`, data);\r\n  \r\n        if (!response.data.error) {\r\n          setMessage(\"Contraseña actualizada correctamente...\");\r\n          setIsError(false);\r\n        } else {\r\n          // Mostrar el mensaje de error del servidor\r\n          setMessage(response.data.message);\r\n          setIsError(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Mostrar un mensaje de error genérico\r\n        setMessage(\"Hubo un error al procesar la solicitud\");\r\n        setIsError(true);\r\n      }\r\n    };\r\n\r\n      return(\r\n\r\n        <View style={LoginStyles.container}>\r\n\r\n            <View style={LoginStyles.login_container}>\r\n                <Text style={LoginStyles.title}>Reiniciar Contraseña </Text>\r\n\r\n                <View style={LoginStyles.input_container}>\r\n                        <Controller\r\n                        control={control}\r\n                        rules={{\r\n                        required: true,\r\n                        }}\r\n                        render={({ field: { onChange, onBlur, value } }) => (\r\n                        <TextInput\r\n                        label=\"Username\"\r\n                        style={LoginStyles.input}\r\n                        onChangeText={onChange}\r\n                        value={value}\r\n                        onBlur={onBlur}\r\n                        \r\n                        />\r\n                    )}\r\n                    name=\"username\"\r\n                    />\r\n                    {errors.username?.type == \"required\" && (\r\n                    <Text style={{ color: \"red\" }}>Usuario es obligatorio</Text>\r\n                    )}\r\n                         <Controller\r\n                             control={control}\r\n\r\n                              render={({ field: { onChange, onBlur, value } }) => (\r\n                                    \r\n\r\n                               <TextInput\r\n                                    label=\"Palabra reservada\" \r\n                                    style={[LoginStyles.input]}\r\n                                    onChangeText={onChange}\r\n                                    value={value}\r\n                                    onBlur={onBlur}\r\n                                    />  \r\n                                    )}\r\n                            name=\"reservedword\"\r\n                         />\r\n                        {errors.reservedword?.type == \"required\" && (\r\n            <Text style={{ color: \"red\" }}>Ingrese su palabra reservada</Text>\r\n            )}\r\n\r\n\r\n                      <Controller\r\n                             control={control}\r\n                              render={({ field: { onChange, onBlur, value } }) => (\r\n                                    \r\n\r\n                                    <TextInput\r\n                                    label=\"Nueva Contraseña\" \r\n                                    style={[LoginStyles.input]}\r\n                                    onChangeText={onChange}\r\n                                    value={value}\r\n                                    onBlur={onBlur}\r\n                                    secureTextEntry={!showPassword}\r\n                                    icon={showPassword ? 'car-door' : 'car-door-lock'}\r\n                                    onPress={() => setShowPassword(!showPassword)}\r\n                                    />  \r\n                                    )}\r\n                                    name=\"newPassword\"\r\n                         />\r\n                        {errors.newPassword?.type == \"required\" && (\r\n                        <Text style={{ color: \"red\" }}>Contraseña es obligatorio</Text>\r\n                        )}\r\n\r\n\r\n            <View style={LoginStyles.button_container}>\r\n                <Button\r\n                style={LoginStyles.button}\r\n                textColor=\"black\"\r\n                onPress={handleSubmit(forgotPassword)}\r\n                >\r\n                    Actualizar Contraseña\r\n                </Button>\r\n                <Button\r\n                    style={LoginStyles.button}\r\n                    textColor=\"black\"\r\n                    onPress={() => navigation.navigate('Login')} \r\n                    >\r\n                    Volver\r\n                </Button>\r\n\r\n            </View>\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n      )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}